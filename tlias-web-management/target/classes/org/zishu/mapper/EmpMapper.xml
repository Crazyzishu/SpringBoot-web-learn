<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zishu.mapper.EmpMapper">
<!--    根据id更新员工基本信息 , String类型的需要设置为不为空字符串-->
<!--    set标签：自动生成set关键字；自动的删除掉更新字段后多余的‘，’-->
    <update id="updateById">
        UPDATE emp
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="job != null">
                job = #{job},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    <!--    根据ID批量删除员工信息
        foreach标签：
        collection：指定集合类型
        item：指定集合中的元素
        separator：指定分隔符
        open：循环结束后指定开头
        close：循环结束后指定结尾
-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="list" resultType="org.zishu.pojo.Emp">
        select e.*,d.name deptName from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
              and e.entry_date between #{begin} and #{end}
            </if>
        </where>order by e.update_time desc
    </select>

<!--    定义ResultMap-->
    <resultMap id="empResultMap" type="org.zishu.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
<!--        封装员工的工作经历信息 ofType中放集合的全类名-->
        <collection property="exprList" ofType="org.zishu.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_empid" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>

<!--    根据id查询员工的基本信息以及员工的工作经历信息-->
<!--    ResultType是自动结果封装，返回值类型为Emp-->
    <select id="getById" resultMap="empResultMap">
        select
            e.*,
            ee.id ee_id,
            ee.emp_id ee_empid,
            ee.begin ee_begin,
            ee.end ee_end,
            ee.company ee_company,
            ee.job ee_job
        from emp e
                 left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}

    </select>
    <select id="countEmpJobData" resultType="java.util.Map">
        select
            (case
                 when job=1 then '班主任'
                 when job=2 then '讲师'
                 when job=3 then '咨询师'
                 when job=4 then '教研主管'
                 when job=5 then '咨询师'
                 else  '其他职位'
                end) pos,
            count(*) num
        from emp group by job order by num;
    </select>
</mapper>